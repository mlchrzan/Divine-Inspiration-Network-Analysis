---
title: "network stats"
author: "mlc and kmr"
format: html
editor: visual
---

```{r libraries, message=FALSE, warning=FALSE}
library(tidyverse)
library(igraph)
library(GGally)
```

See network_trained_on_all_chapters for prior work

# Chapter-to-Topic

## View

```{r network}
chapter_prophet_topic_multi_net
```

```{r add-section-attr}
book_sections <- chapters_topics_multi_prophets |> 
  group_by(chapter) |> 
  summarise(Section = Section, .groups = 'drop') |> 
  distinct()

V(chapter_prophet_topic_multi_net)$Section[type == FALSE] <- book_sections$Section

chapter_prophet_topic_multi_net
```

```{r add-labels}
# topic label
V(chapter_prophet_topic_multi_net)$label[type == TRUE] <- 
  V(chapter_prophet_topic_multi_net)[type == TRUE]$name

V(chapter_prophet_topic_multi_net)$label[type == FALSE] <- 
  V(chapter_prophet_topic_multi_net)[type == FALSE]$book_chap
```

```{r plot}
set.seed(106)
# ggnet2(net = chapter_prophet_topic_multi_net, 
#        node.color = V(chapter_prophet_topic_multi_net)$type,
#        palette = c("TRUE" = 'yellow3', 
#                    'FALSE' = 'skyblue'),
#        node.alpha = 0.75,
#        node.label = V(chapter_prophet_topic_multi_net)$label, 
#        node.shape = if_else(V(chapter_prophet_topic_multi_net)$type == FALSE,
#                             V(chapter_prophet_topic_multi_net)$Section,
#                             'Topic'),
#        label.size = 2.5)

ggnet2(net = chapter_prophet_topic_multi_net, 
       node.color = if_else(V(chapter_prophet_topic_multi_net)$type == FALSE,
                            V(chapter_prophet_topic_multi_net)$Section,
                            'Topic'),
       palette = c("Major Prophets" = 'darkgreen', 
                   'Minor Prophets' = 'lightgreen', 
                   "Topic" = rgb(red = 1, 
                               green = 0.5, 
                               blue = 0.5,
                               alpha = 0.5)),
       node.label = V(chapter_prophet_topic_multi_net)$label,
       node.alpha = 0.75,
       label.size = 2.5, 
       legend.position = 'top')
```

## Examine

### Centrality

```{r calc-centrality}
degree_centrality <- igraph::degree(chapter_prophet_topic_multi_net, 
                                    mode = 'all')

characteristics <- chapters_topics_multi_prophets |> 
  group_by(chapter) |> 
  summarize(Section = Section,
            book_chap = book.ch.a,
            n_words = sum(n_words),
            .groups = 'drop') |> 
  distinct()

deg_cent <- degree_centrality |> 
  as_tibble() |> 
  mutate(node = degree_centrality |> names(), 
         node = as.numeric(node),
         node_level = c(rep(0, 250), rep(1, 43))) |> 
  rename(deg_centrality = value, 
         chapter = node) |> 
  left_join(characteristics, 
            by = join_by(chapter)) |> 
  mutate(Section = if_else(is.na(Section), 
                           'Topic Number', 
                           Section)) |> 
  rename(node_type = Section, 
         node = chapter)

deg_cent
```

```{r centrality-vs-length}
deg_cent |> arrange(desc(deg_centrality))

deg_cent |> 
  filter(!is.na(n_words)) |> 
  ggplot(aes(y = deg_centrality, 
             x = n_words)) + 
  geom_point() + 
  geom_smooth(method = 'lm', 
              se = F) + 
  geom_smooth(method = 'loess', 
              color = 'red3', 
              se = F) + 
  theme_minimal()

summary(lm(deg_centrality ~ n_words, data = deg_cent))
```

```{r prophet_cat_centrality}
deg_cent |> 
  filter(node_type != 'Topic Number') |> 
  group_by(node_type) |> 
  summarize(cent_sum = mean(deg_centrality, na.rm = T)) |> 
  ggplot(aes(x = forcats::fct_reorder(node_type, cent_sum), 
             y = cent_sum)) + 
  geom_col(fill = 'darkgreen') + 
  theme_minimal() + 
  coord_flip() + 
  labs(title = 'Average Centrality Scores by Prophet Category',
       subtitle = '',
       x = 'Prophet Type', 
       y = 'Average of Centrality Scores') 
```

```{r chapter_centrality}
deg_cent |> 
  filter(node_level == 0) |> 
  group_by(book_chap, node_type) |> 
  summarize(avg_cent = mean(deg_centrality), 
            .groups = 'drop') |> 
  arrange(desc(avg_cent)) |> 
  slice_head(n = 20) |> 
  ggplot(aes(x = fct_reorder(as.character(book_chap), avg_cent),
             y = avg_cent)) + 
  geom_col(aes(fill = node_type)) + 
  scale_fill_manual(values = c('darkgreen', 'lightgreen')) +
  coord_flip() + 
  theme_minimal() + 
  labs(title = '20 Most Central Chapters', 
       x = 'Chapter', 
       y = 'Centrality', 
       fill = 'Prophet Category') + 
  theme(legend.position = 'bottom') 
```

```{r topic_centrality}
deg_cent |> 
  filter(node_type == "Topic Number") |> 
  arrange(desc(deg_centrality)) |> 
  slice_head(n = 20) |> 
  mutate(node = as.character(node)) |> 
  ggplot(aes(x = fct_reorder(node, deg_centrality),
             y = deg_centrality)) + 
  geom_col(fill = 'darkgreen') + 
  coord_flip() + 
  theme_minimal() + 
  labs(title = '20 Most Central Topics', 
       subtitle = 'Measured by Degree Centrality',
       x = 'Topic', 
       y = 'Degree Centrality Score') 
```

```{r centrality-vs-mode}
# Is centrality more about the chapter or the topic? 
deg_cent |> 
  mutate(node_level = if_else(node_level == 0, 
                              "Chapter", 
                              "Topic")) |> 
  group_by(node_level) |> 
  summarize(avg_cent = mean(deg_centrality)) |> 
  ggplot(aes(x = node_level,
             y = avg_cent)) +
  geom_col(aes(fill = node_level)) + 
  scale_fill_manual(values = c('darkgreen', rgb(red = 1, 
                                                green = 0.5, 
                                                blue = 0.5))) +
  theme_minimal() + 
  labs(title = 'Centrality by Node Level', 
       subtitle = 'Topics More Central than the Chapters',
       x = 'Node Level', 
       y = 'Average Centrality') + 
  theme(legend.position = 'none') 
```

### Clustering

```{r get-clusters}
clusters <- cluster_fast_greedy(chapter_prophet_topic_multi_net)

clusters
# plot(clusters, chapter_prophet_topic_multi_net)
```

```{r save-clusters}
cluster_tib <- tibble(cluster = as.numeric(membership(clusters)),
                      node = V(chapter_prophet_topic_multi_net)$name) |> 
  mutate(node_level = c(rep(0, 250), rep(1, 43))) |>
  rename(chapter = node) |> 
  left_join(characteristics |> mutate(chapter = as.character(chapter)), 
            by = join_by(chapter)) |> 
  mutate(Section = if_else(is.na(Section), 
                           'Topic Number', 
                           Section)) |> 
  rename(node_type = Section, 
         node = chapter) |> 
  arrange(cluster)

cluster_tib
```

```{r analyze}
cluster_tib |> 
  mutate(node_level = if_else(node_level == 1, "Topic", "Chapter")) |> 
  group_by(cluster, node_level) |> 
  summarize(n_nodes = n()) |> 
  ungroup() |> 
  ggplot(aes(x = cluster,
             y = n_nodes, 
             fill = as.factor(node_level))) +
  scale_fill_manual(values = c('darkgreen', 'red')) + 
  geom_col(position = 'dodge') + 
  theme_minimal() + 
  theme(legend.position = 'bottom') + 
  labs(title = "Number of Nodes in Each Cluster, Disaggregated by Node Type", 
       x = "Cluster", 
       y = 'Number of Nodes', 
       fill = 'Node Type')
```

```{r attach-clusts-to-network}
V(chapter_prophet_topic_multi_net)$cluster <- as.character(membership(clusters))
V(chapter_prophet_topic_multi_net)$centrality <- 
  igraph::degree(chapter_prophet_topic_multi_net, 
                 mode = 'all')
```

```{r cluster_plot}
clust_palette <- c('red4', '#ff7f00', '#a6cee3', 
                   'darkgreen', '#ffff33', '#e41a1c',
                   '#984ea3', '#a65628', '#f781bf', 
                   '#b2df8a', '#6a3d9a', '#0054b0',
                   '#b15928', '#fb9a99', '#cab2d6', 
                   '#fdbf6f', '#33a02c', '#f010a0')

set.seed(106)
ggnet2(chapter_prophet_topic_multi_net, 
      node.color = V(chapter_prophet_topic_multi_net)$cluster, 
      palette = c("1" = clust_palette[1], 
                  "2" = clust_palette[2],
                  "3" = clust_palette[3],
                  "4" = clust_palette[4],
                  "5" = clust_palette[5],
                  "6" = clust_palette[6],
                  "7" = clust_palette[7],
                  "8" = clust_palette[8],
                  "9" = clust_palette[9],
                  "10" = clust_palette[10],
                  "11" = clust_palette[11],
                  "12" = clust_palette[12],
                  "13" = clust_palette[13],
                  "14" = clust_palette[14],
                  "15" = clust_palette[15],
                  "16" = clust_palette[16],
                  "17" = clust_palette[17],
                  "18" = clust_palette[18]), 
      node.label = if_else(V(chapter_prophet_topic_multi_net)$type == FALSE,
                           V(chapter_prophet_topic_multi_net)$book_chap,
                           V(chapter_prophet_topic_multi_net)$name), 
      label.size = 2.5, 
      node.alpha = 0.75,
      legend.position = 'bottom', 
      edge.color = 'lightgray')
```

# Book-to-Topic

## View

```{r add-section-attr}
book_sections <- chapters_topics_multi_prophets |> 
  group_by(book_id, book_name) |> 
  summarise(Section = Section, .groups = 'drop') |> 
  distinct()

V(chapter_prophet_top_multi_net)$Section[type == FALSE] <- book_sections$Section
```

```{r plot, fig.height=8, fig.width=8}
set.seed(106)
ggnet2(chapter_prophet_top_multi_net, 
       node.color = if_else(V(chapter_prophet_top_multi_net)$type == FALSE, 
                            V(chapter_prophet_top_multi_net)$Section, 
                            'Topic'), 
       palette = c(Topic = rgb(red = 1, 
                               green = 0.5, 
                               blue = 0.5,
                               alpha = 0.5),
                   "Major Prophets" = 'darkgreen',
                   "Minor Prophets" = 'lightgreen'), 
       node.label = V(chapter_prophet_top_multi_net)$name, 
       node.alpha = 0.75,
       label.size = 2.5, 
       legend.position = 'top')

set.seed(106)
plot(chapter_prophet_top_multi_net) 
```

## Examine

### Centrality

#### Degree

```{r calc-centrality}
degree_centrality <- igraph::degree(chapter_prophet_top_multi_net, 
                                    mode = 'all')

deg_cent <- degree_centrality |> 
  as_tibble() |> 
  mutate(node = degree_centrality |> names(), 
         node_level = c(rep(0, 17), rep(1, 43))) |> 
  select(node, node_level, value) |> 
  rename(deg_centrality = value) |> 
  arrange(desc(deg_centrality)) |> 
  mutate(node_type = case_when(node_level == 1 ~ "Topic Number",
                             node_level == 0 ~ "Minor Prophet")) |> 
  mutate(node_type = if_else(node == 'Isaiah' |
                               node == 'Jeremiah' |
                               node == 'Lamentations' |
                               node == 'Ezekiel' |
                               node == 'Daniel', 
                             "Major Prophet", 
                             node_type))

deg_cent
```

```{r prophet_cat_centrality}
deg_cent |> 
  filter(node_type != 'Topic Number') |> 
  #group_by(node_type) |> 
  #summarize(avg_cent = mean(deg_centrality, na.rm = T)) |> 
  ggplot(aes(x = forcats::fct_reorder(node_type, deg_centrality), 
             y = deg_centrality)) + 
  geom_col(fill = 'darkgreen') + 
  theme_minimal() + 
  coord_flip() + 
  labs(title = 'Centrality Scores by Prophet Category',
       subtitle = 'Despite the larger number of book, the Minor Prophets have a lower total centrality\nthan the Major Prophets',
       x = 'Prophet Type', 
       y = 'Sum of Centrality Scores')
```

```{r prophet_centrality}
deg_cent |> 
  filter(node_type != 'Topic Number') |> 
  ggplot(aes(x = forcats::fct_reorder(node, deg_centrality), 
             y = deg_centrality)) + 
  geom_col(aes(fill = node_type)) + 
  scale_fill_manual(values = c('darkgreen', 'lightgreen')) +
  theme_minimal() + 
  coord_flip() + 
  labs(title = 'Centrality Scores by Prophetic Book',
       subtitle = 'Scores show small evidence of need for a new classification beyond\nthe Major/Minor Division',
       x = 'Prophet Type', 
       y = 'Centrality Scores', 
       fill = 'Prophet Category') +
  theme(legend.position = 'bottom')
```

```{r topic_centrality}
deg_cent |> 
  filter(node_type == "Topic Number") |> 
  arrange(desc(deg_centrality)) |> 
  slice_head(n = 10) |> 
  # mutate(node = as.numeric(node)) |> 
  ggplot(aes(x = fct_reorder(node, deg_centrality),
             y = deg_centrality)) + 
  geom_col(fill = 'darkgreen') + 
  coord_flip() + 
  theme_minimal() + 
  labs(title = '10 Most Central Topics', 
       subtitle = 'Measured by Degree Centrality',
       x = 'Topic', 
       y = 'Centrality Score')
```

```{r centrality-vs-mode}
deg_cent |> 
  mutate(node_level = if_else(node_level == 0, 
                              "Book", 
                              "Topic")) |> 
  group_by(node_level) |> 
  summarize(avg_cent = mean(deg_centrality)) |> 
  ggplot(aes(x = node_level,
             y = avg_cent)) +
  geom_col(aes(fill = node_level)) + 
  scale_fill_manual(values = c('darkgreen', rgb(red = 1, 
                                                green = 0.5, 
                                                blue = 0.5))) +
  theme_minimal() + 
  labs(title = 'Centrality by Node Level', 
       subtitle = 'Books More Central than the Topics',
       x = 'Node Level', 
       y = 'Average Centrality') + 
  theme(legend.position = 'none')
```

#### Eigenvector

```{r calc-eigen-cent}
eig_centrality <- igraph::eigen_centrality(chapter_prophet_top_multi_net, 
                                              scale = T)

eig_cent <- eig_centrality$vector |> 
  as_tibble() |> 
  mutate(node = eig_centrality$vector |> names(), 
         node_level = c(rep(0, 17), rep(1, 43))) |> 
  select(node, node_level, value) |> 
  rename(eig_centrality = value) |> 
  arrange(desc(eig_centrality)) |> 
  mutate(node_type = case_when(node_level == 1 ~ "Topic Number",
                             node_level == 0 ~ "Minor Prophet")) |> 
  mutate(node_type = if_else(node == 'Isaiah' |
                               node == 'Jeremiah' |
                               node == 'Lamentations' |
                               node == 'Ezekiel' |
                               node == 'Daniel', 
                             "Major Prophet", 
                             node_type))

eig_cent
```

```{r prophet_cat_centrality}
eig_cent |> 
  filter(node_type != 'Topic Number') |> 
  #group_by(node_type) |> 
  #summarize(avg_cent = mean(deg_centrality, na.rm = T)) |> 
  ggplot(aes(x = forcats::fct_reorder(node_type, eig_centrality), 
             y = eig_centrality)) + 
  geom_col(fill = 'darkgreen') + 
  theme_minimal() + 
  coord_flip() + 
  labs(title = 'Centrality Scores by Prophet Category',
       subtitle = 'Despite the larger number of book, the Minor Prophets have a lower total centrality\nthan the Major Prophets',
       x = 'Prophet Type', 
       y = 'Sum of Centrality Scores')
```

```{r}
eig_cent |> 
  filter(node_type != 'Topic Number') |> 
  ggplot(aes(x = forcats::fct_reorder(node, eig_centrality), 
             y = eig_centrality)) + 
  geom_col(aes(fill = node_type)) + 
  scale_fill_manual(values = c('darkgreen', 'lightgreen')) +
  theme_minimal() + 
  coord_flip() + 
  labs(title = 'Centrality Scores by Prophetic Book',
       subtitle = 'Scores show small evidence of need for a new classification beyond\nthe Major/Minor Division',
       x = 'Prophet Type', 
       y = 'Centrality Scores', 
       fill = 'Prophet Category') +
  theme(legend.position = 'bottom')
```

```{r topic_centrality}
eig_cent |> 
  filter(node_type == "Topic Number") |> 
  arrange(desc(eig_centrality)) |> 
  slice_head(n = 10) |> 
  # mutate(node = as.numeric(node)) |> 
  ggplot(aes(x = fct_reorder(node, eig_centrality),
             y = eig_centrality)) + 
  geom_col(fill = 'darkgreen') + 
  coord_flip() + 
  theme_minimal() + 
  labs(title = '10 Most Central Topics', 
       subtitle = 'Measured by Eigenvector Centrality',
       x = 'Topic', 
       y = 'Centrality Score')
```

```{r centrality-vs-mode}
eig_cent |> 
  mutate(node_level = if_else(node_level == 0, 
                              "Book", 
                              "Topic")) |> 
  group_by(node_level) |> 
  summarize(avg_cent = mean(eig_centrality)) |> 
  ggplot(aes(x = node_level,
             y = avg_cent)) +
  geom_col(aes(fill = node_level)) + 
  scale_fill_manual(values = c('darkgreen', rgb(red = 1, 
                                                green = 0.5, 
                                                blue = 0.5))) +
  theme_minimal() + 
  labs(title = 'Centrality by Node Level', 
       subtitle = 'Books More Central than the Topics',
       x = 'Node Level', 
       y = 'Average Centrality') + 
  theme(legend.position = 'none')
```

#### Comparative Analysis of Both Centrality Scores

```{r table-wth-both}
all_cent <- full_join(deg_cent, eig_cent, 
                      by = join_by(node, node_level, node_type)) |> 
  select(node, node_level, node_type, everything())

all_cent
```

```{r calc-correlation}
cor(all_cent$deg_centrality, all_cent$eig_centrality)
```

```{r make-long}
all_cent_long <- all_cent |> 
  pivot_longer(cols = contains("centrality"), 
               names_to = "centrality_type", 
               values_to = "centrality_scores")

all_cent_long
```

```{r visualizations}
all_cent_long
```

### Clustering

#### Fast and Greedy

```{r get-clusters}
clusters <- cluster_fast_greedy(chapter_prophet_top_multi_net)

clusters
# plot(clusters, chapter_prophet_top_multi_net)
```

```{r save-clusters}
cluster_tib <- tibble(cluster = as.numeric(membership(clusters)),
       node = V(chapter_prophet_top_multi_net)$name) |> 
  mutate(node_level = c(rep(0, 17), rep(1, 43))) |>
  mutate(node_type = case_when(node_level == 1 ~ "Topic Number",
                             node_level == 0 ~ "Minor Prophet")) |> 
  mutate(node_type = if_else(node == 'Isaiah' |
                               node == 'Jeremiah' |
                               node == 'Lamentations' |
                               node == 'Ezekiel' |
                               node == 'Daniel', 
                             "Major Prophet", 
                             node_type)) |> 
  arrange(cluster)

cluster_tib
```

```{r analyze}
cluster_tib |> 
  mutate(node_level = if_else(node_level == 1, "Topic", "Book")) |> 
  group_by(cluster, node_level) |> 
  summarize(n_nodes = n()) |> 
  ungroup() |> 
  ggplot(aes(x = cluster,
             y = n_nodes, 
             fill = as.factor(node_level))) +
  scale_fill_manual(values = c('darkgreen', 'red')) + 
  geom_col(position = 'dodge') + 
  theme_minimal() + 
  theme(legend.position = 'bottom') + 
  labs(title = "Number of Nodes in Each Cluster, Disaggregated by Node Type", 
       x = "Cluster", 
       y = 'Number of Nodes', 
       fill = 'Node Type')
```

I think the story being told here IS one of a new classification method. There seems to be a section of these books that includes a "major" prophet book, Lamentations, but that a lot of minor prophets are sharing the topics among themselves (cluster 4, where topics 16 and 43 seem to be pulling in a lot of minor prophet attention) while some of the other major prophets act almost like gravitational centers in the network, pulling in minor prophets near them (might be cool to get a lineology of these to see if the ones they pull into their clusters were near them). The one except to this appears to be Jeremiah pulling in Daniel, so two major prophets who share a cluster (probably because Daniel covers so many unique topics).

```{r attach-clusts-to-network}
V(chapter_prophet_top_multi_net)$cluster <- as.character(membership(clusters))
V(chapter_prophet_top_multi_net)$centrality <- 
  igraph::degree(chapter_prophet_top_multi_net, 
                 mode = 'all')
```

```{r cluster_plot}
set.seed(106)
ggnet2(chapter_prophet_top_multi_net, 
      node.color = V(chapter_prophet_top_multi_net)$cluster, 
      palette = c("1" = '#377eb8', 
                  "2" = '#ff7f00', 
                  "3" = '#a6cee3',
                  "4" = '#e41a1c',
                  "5" = '#ffff33',
                  "6" = '#984ea3',
                  "7" = '#a65628',
                  "8" = '#4daf4a'), 
      node.label = V(chapter_prophet_top_multi_net)$name, 
      label.size = 2.5, 
      node.alpha = 0.75,
      node.size = V(chapter_prophet_top_multi_net)$centrality,
      legend.position = 'none', 
      edge.color = 'lightgray')

```
